/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2021-01-02 14:36:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.shopping.product_005fdetail;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Coffee_005fStick1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"./view/css/coffemenu.css\" type=\"text/css\">\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>'맥심 모카골드'|COFFEESAZO</title>\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.js\"\r\n");
      out.write("        integrity=\"sha256-QWo7LDvxbWT2tbbQ97B53yJnYU3WhH/C8ycbRAkjPDc=\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("        <!--favicon-->\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"https://p7.hiclipart.com/preview/988/211/651/white-coffee-tea-cafe-computer-icons-cup-of-coffee-icon.jpg\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <main>\r\n");
      out.write("        <div id=\"menu-container\">\r\n");
      out.write("            <div class=\"menu-1\">\r\n");
      out.write("                <div class=\"menu-toplogo\">\r\n");
      out.write("                    <h1><a href=\"index.jsp?inc=view/shopping/product/stick_coffee.jsp\">스틱커피</a></h1>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"menu-toptag\">\r\n");
      out.write("                    <a href=\"index.jsp?inc=view/shopping/product/stick_coffee.jsp\">#쉽고간편한</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"menu-productinfo\">\r\n");
      out.write("                    \r\n");
      out.write("\r\n");
      out.write("                    \r\n");
      out.write("                    <img src=\"./view/img/maxim.jpg\" alt=\"gold\">\r\n");
      out.write("                    <div class=\"menu-result\">\r\n");
      out.write("                        <form action=\"\">\r\n");
      out.write("                            <div class=\"result-title\">\r\n");
      out.write("                                <h2>카페모카</h2>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"result-product\">\r\n");
      out.write("                                <h3>'맥심 모카골드'</h3>\r\n");
      out.write("                                <p>18,000원</p>\r\n");
      out.write("                                <p>동서식품</p>\r\n");
      out.write("                                <p>용량:500g(100개입)</p>\r\n");
      out.write("                                <p>배송비:무료</p>\r\n");
      out.write("                                <p>배송 기간:이틀 예정</p>\r\n");
      out.write("                                <p>[영업일 기준 2일 이내 발송]</p>\r\n");
      out.write("                                <label for=\"addcount\">수량</label>\r\n");
      out.write("                                <input type=\"text\" class=\"addcount\" value=\"1\">\r\n");
      out.write("                                <p>총 18,000원</p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"result-button\">\r\n");
      out.write("                                <button type=\"button\" class=\"btn btn-outline-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n");
      out.write("                                    장바구니\r\n");
      out.write("                                  </button>\r\n");
      out.write("                                  \r\n");
      out.write("                                  <!-- Modal -->\r\n");
      out.write("                                  <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("                                    <div class=\"modal-dialog\">\r\n");
      out.write("                                      <div class=\"modal-content\">\r\n");
      out.write("                                        <div class=\"modal-header\">\r\n");
      out.write("                                          <h5 class=\"modal-title\" id=\"exampleModalLabel\"></h5>\r\n");
      out.write("                                          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"modal-body\">\r\n");
      out.write("                                         장바구니에 추가 되었습니다.\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                        <div class=\"modal-footer\">\r\n");
      out.write("                                          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">쇼핑 계속하기</button>\r\n");
      out.write("                                          <button type=\"button\" class=\"btn btn-primary\" onclick= \" location.href = 'index.jsp?inc=view/order/shopping_cart.jsp'\">장바구니로 가기</button>\r\n");
      out.write("                                        </div>\r\n");
      out.write("                                      </div>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                  </div>\r\n");
      out.write("                                <button type=\"button\" class=\"btn btn-outline-secondary\"onclick= \" location.href = 'index.jsp?inc=view/order/shopping_payment.jsp'\">바로구매</button>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                    </form>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                                        \r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"menu2\">\r\n");
      out.write("                \r\n");
      out.write("                <img src=\"./view/img/maxim.jpg\" alt=\"\">\r\n");
      out.write("                <div class=\"detail-infomation\">\r\n");
      out.write("                    <div class=\"detail-top\">\r\n");
      out.write("                        <p class=\"p1\">동서식품'맥심모카골드'</p>\r\n");
      out.write("                            <p class=\"p2\">East-West Foods'Maxim Moccagold'</p>\r\n");
      out.write("                                \r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"detail-mid\">\r\n");
      out.write("                                <p>국가 : 온두라스,콜롬비아</p>\r\n");
      out.write("                                <p>지역 : 온두라스,콜롬비아</p>\r\n");
      out.write("                                <p>맥심 모카골드 마일드 커피에는</p>\r\n");
      out.write("                                <p>아라비카 원두의 깨끗하고, </p> \r\n");
      out.write("                                <p>신선한 향미를 그대로 전달할 수 있는</p>\r\n");
      out.write("                                <p>APEX(Advanced Prime Extraction) 공법을</p>\r\n");
      out.write("                                <p>적용하였습니다.</p>\r\n");
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("    </main>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
